services:
  postgresql-api:
    image: 'postgres:latest'
    environment:
      - POSTGRES_DB=apiTennis
      - POSTGRES_USER=myuser
      - POSTGRES_PASSWORD=secret
    ports:
      - '5432:5432'  # Port par défaut de PostgreSQL
    networks:
      - mynetwork

  adminer:
    image: 'adminer:latest'
    environment:
      - ADMINER_DEFAULT_SERVER=postgresql-api  # Adminer se connectera à PostgreSQL de l'application
    ports:
      - '8081:8080'  # Adminer accessible via http://localhost:8081
    depends_on:
      - postgresql-api
    networks:
      - mynetwork

  jenkins:
    image: 'jenkins/jenkins:lts'
    ports:
      - '8082:8080'  # Jenkins accessible via http://localhost:8082
      - '50000:50000'
    volumes:
      - jenkins_home:/var/jenkins_home  # Volume persistant pour Jenkins
    networks:
      - mynetwork
    environment:
      - JAVA_OPTS=-Djenkins.install.runSetupWizard=false  # Désactiver l'assistant de configuration initiale


  #sonarqube:
    #image: 'sonarqube:latest'
      #environment:
      #- SONAR_JDBC_URL=jdbc:postgresql://postgresql-api:5432/sonar  # Connexion à la base PostgreSQL dédiée à SonarQube
      #- SONAR_JDBC_USERNAME=myuser
      #- SONAR_JDBC_PASSWORD=secret
    #ports:
      #- '9000:9000'  # SonarQube accessible via http://localhost:9000
    #depends_on:
      #- postgresql-api
    #networks:
      #- mynetwork

volumes:
  jenkins_home:
    driver: local

networks:
  mynetwork:
    driver: bridge